version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: lane_mcp_postgres
    environment:
      POSTGRES_USER: lane_user
      POSTGRES_PASSWORD: lane_password
      POSTGRES_DB: lane_mcp
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lane_user -d lane_mcp"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: lane_mcp_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Lane MCP Application
  app:
    build: .
    container_name: lane_mcp_app
    ports:
      - "5000:5000"
    environment:
      # Application
      FLASK_ENV: production
      DATABASE_URL: postgresql://lane_user:lane_password@postgres:5432/lane_mcp
      REDIS_URL: redis://redis:6379/0
      
      # Security (override in production)
      SECRET_KEY: ${SECRET_KEY:-change-me-in-production}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-change-me-in-production}
      
      # Google Ads API
      GOOGLE_ADS_CLIENT_ID: ${GOOGLE_ADS_CLIENT_ID}
      GOOGLE_ADS_CLIENT_SECRET: ${GOOGLE_ADS_CLIENT_SECRET}
      GOOGLE_ADS_REFRESH_TOKEN: ${GOOGLE_ADS_REFRESH_TOKEN}
      GOOGLE_ADS_DEVELOPER_TOKEN: ${GOOGLE_ADS_DEVELOPER_TOKEN}
      GOOGLE_ADS_CUSTOMER_ID: ${GOOGLE_ADS_CUSTOMER_ID}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
    command: gunicorn -w 4 -b 0.0.0.0:5000 main_production:app

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: lane_mcp_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./static:/usr/share/nginx/html/static:ro
    depends_on:
      - app

volumes:
  postgres_data:
  redis_data: